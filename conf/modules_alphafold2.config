/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    withName: 'GUNZIP|COMBINE_UNIPROT|DOWNLOAD_PDBMMCIF|ARIA2_PDB_SEQRES' {
        publishDir = [
            path: {"${params.outdir}/DBs/alphafold2/${params.alphafold2_mode}"},
            mode: 'symlink',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'NFCORE_PROTEINFOLD:POST_PROCESSING:MULTIQC' {
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : "alphafold2_$filename" }
        ]
    }
}

process {
    withName: 'RUN_ALPHAFOLD2' {
        accelerator = params.use_gpu? 1 : 0
        ext.args   = [
            params.use_gpu ? '--use_gpu_relax=true' : '--use_gpu_relax=false',
            params.max_template_date ? "--max_template_date ${params.max_template_date}" : '',
            params.random_seed ? "--random_seed=${params.random_seed}" : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/alphafold2/${params.alphafold2_mode}/${meta.id}" },
                mode: 'copy',
                saveAs: { filename ->
                    if(filename.endsWith('_pae.tsv')){
                        "paes/$filename"
                    } else if(filename.equals('versions.yml')){
                        null
                    } else { filename }
                },
                pattern: '*.*'
            ],
            [
                path: { "${params.outdir}/alphafold2/${params.alphafold2_mode}/top_ranked_structures" },
                mode: 'copy',
                saveAs: { "${meta.id}.pdb" },
                pattern: '*_alphafold2.pdb'
            ]
        ]
    }
}

process {
    withName: 'RUN_ALPHAFOLD2_MSA' {
        ext.args =  params.max_template_date ? "--max_template_date ${params.max_template_date}" : ''
        publishDir = [
            path: { "${params.outdir}/alphafold2/${params.alphafold2_mode}" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'RUN_ALPHAFOLD2_PRED' {
        accelerator = params.use_gpu? 1 : 0
        ext.args   = params.use_gpu ? '--use_gpu_relax=true' : '--use_gpu_relax=false'
        publishDir = [
            [
                path: { "${params.outdir}/alphafold2/${params.alphafold2_mode}/${meta.id}" },
                mode: 'copy',
                saveAs: { filename ->
                    if(filename.endsWith('_pae.tsv')){
                        "paes/$filename"
                    } else if(filename.equals('versions.yml')){
                        null
                    } else { filename }
                },
                pattern: '*.*'
            ],
            [
                path: { "${params.outdir}/alphafold2/${params.alphafold2_mode}/top_ranked_structures" },
                mode: 'copy',
                saveAs: { "${meta.id}.pdb" },
                pattern: '*_alphafold2.pdb'
            ]
        ]
    }
}

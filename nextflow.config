/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/proteinfold Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                       = null
    mode                        = 'alphafold2' // {alphafold2, colabfold, esmfold, rosettafold_all_atom}
    use_gpu                     = false

    // Alphafold2 parameters
    alphafold2_mode             = "standard"
    max_template_date           = "2020-05-14"
    full_dbs                    = false // true full_dbs, false reduced_dbs
    alphafold2_model_preset     = "monomer" // for AF2 {monomer (default), monomer_casp14, monomer_ptm, multimer}
    alphafold2_db               = null
    
    // Database prefixes
    bfd_prefix			= null
    smallbfd_prefix		= null
    mgnify_prefix		= null
    pdb70_prefix		= null
    pdb_mmcif_prefix		= null
    uniclust30_prefix		= null
    uniref90_prefix		= null
    pdb_seq_prefix		= null
    uniprot_prefix		= null
    alphafold_params_prefix	= null
    mmcif_path			= null
    mmcif_obsolete		= null
    uniclust30_db		= null
    bfd_first_non_consensus_sequences = null
    uniprot_fasta		= null
    pdb_seqres_txt		= null
    bfd_metaclust_clu_complete_id30_c90_final_seq_sorted_opt = null
    uniref90_fasta		= null
    mgy_clusters_fasta		= null
    uniclust30_prefix		= null

    bfd_name			= null
    smallbfd_name		= null
    mgnify_name			= null
    pdb70_name			= null
    pdb_mmcif_name		= null
    uniclust30_name		= null
    uniref90_name		= null
    pdb_seqres_name		= null
    uniprot_name		= null
    alphafold_params_name	= null
    mmcif_files_name		= null
    mmcif_obsolete_name		= null
    uniclust30_db_name		= null
    bfd_first_non_consensus_sequences_name = null
    uniprot_fasta_name		= null
    pdb_seqres_txt_name		= null
    bfd_metaclust_clu_complete_id30_c90_final_seq_sorted_opt_name = null
    uniref90_fasta_name		= null
    mgy_clusters_fasta_name	= null

    // Alphafold2 links
    bfd                         = null
    small_bfd                   = null
    alphafold2_params           = null
    mgnify                      = null
    pdb70                       = null
    pdb_mmcif                   = null
    pdb_obsolete                = null
    uniclust30                  = null
    uniref90                    = null
    pdb_seqres                  = null
    uniprot_sprot               = null
    uniprot_trembl              = null

    // Alphafold2 paths
    bfd_path                    = null
    small_bfd_path              = null
    alphafold2_params_path      = null
    mgnify_path                 = null
    pdb70_path                  = null
    pdb_mmcif_path              = null
    uniref30_alphafold2_path    = null
    uniref90_path               = null
    pdb_seqres_path             = null
    uniprot_path                = null

    // Colabfold parameters
    colabfold_server            = "webserver"
    colabfold_model_preset      = "alphafold2_ptm" // {'auto', 'alphafold2', 'alphafold2_ptm', 'alphafold2_multimer_v1', 'alphafold2_multimer_v2', 'alphafold2_multimer_v3'}
    num_recycles_colabfold      = 3
    use_amber                   = true
    colabfold_db                = null
    db_load_mode                = 0
    host_url                    = null
    use_templates               = true
    create_colabfold_index      = false

    // Colabfold links
    colabfold_db_link           = null
    uniref30_colabfold_link     = null

    // Colabfold paths
    colabfold_db_path           = null
    uniref30_colabfold_path     = null

    // Esmfold parameters
    esmfold_db                  = null
    esmfold_model_preset        = "monomer"
    num_recycles_esmfold        = 4

    // Esmfold links
    esmfold_3B_v1                           = null
    esm2_t36_3B_UR50D                       = null
    esm2_t36_3B_UR50D_contact_regression    = null

    // Esmfold paths
    esmfold_params_path         = null

    // Rosettafold-all-atom parameters
    rosettafold_all_atom_db               = null
    uniref30_rosettafold_all_atom_path    = null
    blast_path                            = null
    pdb100_path                           = null
    RFAA_paper_weights_path               = null

    // Process skipping options
    skip_multiqc               = false

    // MultiQC options
    multiqc_config              = null
    multiqc_title               = null
    multiqc_logo                = null
    max_multiqc_email_size      = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                      = null
    tracedir                    = "${params.outdir}/pipeline_info"
    publish_dir_mode            = 'copy'
    email                       = null
    email_on_fail               = null
    plaintext_email             = false
    monochrome_logs             = false
    hook_url                    = null
    help                        = false
    version                     = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    validate_params             = true
    show_hidden_params          = false
    schema_ignore_params        = 'genomes'

    // Config options
    custom_config_version       = 'master'
    custom_config_base          = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description  = null
    config_profile_contact      = null
    config_profile_url          = null
    config_profile_name         = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                  = '128.GB'
    max_cpus                    = 16
    max_time                    = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = ''
    validationShowHiddenParams       = false
    validate_params                  = true

}

spack.enabled = true

// Load base.config by default for all pipelines
includeConfig 'conf/katana.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/proteinfold custom profiles from different institutions.
try {
    includeConfig "${params.custom_config_base}/pipeline/proteinfold.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config/proteinfold profiles: ${params.custom_config_base}/pipeline/proteinfold.config")
}
profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        if (params.use_gpu) {
            docker.runOptions = '--gpus all'
        } else {
            docker.runOptions      = '-u $(id -u):$(id -g)'
        }
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        if (params.use_gpu) {
            docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64 --gpus all'
        } else {
            docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
        }
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        if (params.use_gpu) { singularity.runOptions = '--nv' }
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test                          { includeConfig 'conf/test.config'                                   }
    test_alphafold2_split         { includeConfig 'conf/test_alphafold_split.config'                   }
    test_alphafold2_download      { includeConfig 'conf/test_alphafold_download.config'                }
    test_colabfold_local          { includeConfig 'conf/test_colabfold_local.config'                   }
    test_colabfold_webserver      { includeConfig 'conf/test_colabfold_webserver.config'               }
    test_colabfold_download       { includeConfig 'conf/test_colabfold_download.config'                }
    test_esmfold                  { includeConfig 'conf/test_esmfold.config'                           }
    test_full                     { includeConfig 'conf/test_full.config'                              }
    test_full_alphafold2_standard { includeConfig 'conf/test_full.config'                              }
    test_full_alphafold2_split    { includeConfig 'conf/test_full_alphafold_split.config'              }
    test_full_alphafold2_multimer { includeConfig 'conf/test_full_alphafold_multimer.config'           }
    test_full_colabfold_local     { includeConfig 'conf/test_full_colabfold_local.config'              }
    test_full_colabfold_webserver { includeConfig 'conf/test_full_colabfold_webserver.config'          }
    test_full_colabfold_multimer  { includeConfig 'conf/test_full_colabfold_webserver_multimer.config' }
    test_full_esmfold             { includeConfig 'conf/test_full_esmfold.config'                      }
    test_full_esmfold_multimer    { includeConfig 'conf/test_full_esmfold_multimer.config'             }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/proteinfold'
    author          = """Athanasios Baltzis, Jose Espinosa-Carrasco, Harshil Patel"""
    homePage        = 'https://github.com/nf-core/proteinfold'
    description     = """Protein 3D structure prediction pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.1.1'
    doi             = '10.5281/zenodo.7629996'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load modules config for pipeline specific modes
if (params.mode == 'alphafold2') {
    includeConfig 'conf/modules_alphafold2.config'
} else if (params.mode == 'colabfold') {
    includeConfig 'conf/modules_colabfold.config'
} else if (params.mode == 'esmfold') {
    includeConfig 'conf/modules_esmfold.config'
} else if (params.mode == 'rosettafold_all_atom') {
    includeConfig 'conf/modules_rosettafold_all_atom.config'
}

// Load links to DBs and parameters
includeConfig 'conf/dbs.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
